//! Registers for the Ziren zkVM.

pub const NUM_REGISTERS: usize = 36;
/// A register stores a 32-bit value used by operations.
#[derive(Debug, Clone, Copy, PartialEq)]
pub enum Register {
    ZERO = 0,
    AT = 1,
    V0 = 2,
    V1 = 3,
    A0 = 4,
    A1 = 5,
    A2 = 6,
    A3 = 7,
    T0 = 8,
    T1 = 9,
    T2 = 10,
    T3 = 11,
    T4 = 12,
    T5 = 13,
    T6 = 14,
    T7 = 15,
    S0 = 16,
    S1 = 17,
    S2 = 18,
    S3 = 19,
    S4 = 20,
    S5 = 21,
    S6 = 22,
    S7 = 23,
    T8 = 24,
    T9 = 25,
    K0 = 26,
    K1 = 27,
    GP = 28,
    SP = 29,
    FP = 30,
    RA = 31,
    LO = 32,
    HI = 33,
    BRK = 34,
    HEAP = 35,
}

impl From<u8> for Register {
    fn from(value: u8) -> Self {
        match value {
            0 => Register::ZERO,
            1 => Register::AT,
            2 => Register::V0,
            3 => Register::V1,
            4 => Register::A0,
            5 => Register::A1,
            6 => Register::A2,
            7 => Register::A3,
            8 => Register::T0,
            9 => Register::T1,
            10 => Register::T2,
            11 => Register::T3,
            12 => Register::T4,
            13 => Register::T5,
            14 => Register::T6,
            15 => Register::T7,
            16 => Register::S0,
            17 => Register::S1,
            18 => Register::S2,
            19 => Register::S3,
            20 => Register::S4,
            21 => Register::S5,
            22 => Register::S6,
            23 => Register::S7,
            24 => Register::T8,
            25 => Register::T9,
            26 => Register::K0,
            27 => Register::K1,
            28 => Register::GP,
            29 => Register::SP,
            30 => Register::FP,
            31 => Register::RA,
            32 => Register::LO,
            33 => Register::HI,
            34 => Register::BRK,
            35 => Register::HEAP,
            _ => panic!("invalid register {value}"),
        }
    }
}
